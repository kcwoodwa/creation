{"remainingRequest":"C:\\Users\\Kyle\\creation\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kyle\\creation\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kyle\\creation\\src\\components\\HelloWorld.vue","mtime":1580503390967},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"hello\">\n    <Order\n      v-bind:key=\"order.orderNumber +order.billTo.name\"\n      v-for=\"order in Orders\"\n      :name=\"order.billTo.name\"\n      :company=\"order.billTo.company\"\n      :items=\"order.items\"\n      :orderNumber=\"order.orderNumber\"\n      :orderObject=\"order\"\n    ></Order> \n  </div>\n</template>\n\n<script>\n//const LABELS_PRINTED_TAG_ID = 89655;\nconst ERROR_PRINTING_TAG_ID = 91038;\n\n var secret =\n  \"ZmM4NTRjNmZmNTU1NDg0Zjg3MmE3NjA5NDE4ZTEyYTU6NzVkMTI1ZWJjNjRmNDQzZGE0NmM2NDBlNWYzMGU4YjU=\";\n\nconst options = {\n  hostname: \"ssapi.shipstation.com\",\n  headers: {\n    Authorization: \"Basic \" + secret,\n    \"Content-Type\": \"application/json\"\n  }\n}; \n\nvar active = true;\n\nimport Order from \"@/components/Order.vue\";\nimport http from 'http'\n\nexport default {\n  created() {\n    \n    this.refresh();\n    \n    setInterval(this.refresh, 10000);\n  },\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  },\n  components: {\n    Order\n  },\n  \n  data: function() {\n    return {\n      Orders: []\n     \n     \n    };\n  },\n  methods: {\n    refresh: async function(){\n      \n      await this.getOrders(\"/orders?orderStatus=awaiting_payment\", true)\n      await this.getOrders(\"/orders?orderStatus=awaiting_shipment\");\n    },\n   \n    getOrders: async function(path) {\n      if (active) {\n        options.path = path;\n        options.method = \"GET\";\n        var self = this;\n        const req = http.get(options, res => {\n          console.debug(`STATUS: ${res.sttausCode}`);\n          console.debug(`HEADERS: ${JSON.stringify(res.headers)}`);\n          res.setEncoding(\"utf8\");\n\n          let rawData = \"\";\n          res.on(\"data\", chunk => {\n            rawData += chunk;\n          });\n          res.on(\"end\", () => {\n            try {\n              console.debug(rawData)\n              const parsedData = JSON.parse(rawData);\n              \n              //if(first)this.Orders = [];\n              for (var order in parsedData.orders) {\n                if(this.$children.filter(function(child){\n                  return child.$vnode.key === parsedData.orders[order].orderNumber +parsedData.orders[order].billTo.name \n                }).length === 0)\n                  self.Orders.push(parsedData.orders[order]);\n       \n                }\n              return;\n              \n            } catch (e) {\n              console.error(e.message);\n            }\n          });\n\n          req.on(\"error\", e => {\n            console.error(`problem with request: ${e.message}`);\n          });\n        });\n      }\n    },\n\n    /*  parseOrders(order) {\n      order.coffeeItems = [];\n       {\n        for (var item in order.items) {\n    \n          var itemInOrder = order.items[item];\n\n          if (itemInOrder.name.indexOf(\"Grind:\") === -1){\n            continue;\n          } \n      \n          \n\n\n          //Ethiopia Yirgacheffe Size: 12oz, Grind: Whole\n          var name = itemInOrder.name.split(\"Size\")[0].trim();\n          var size = itemInOrder.name.indexOf(\"12oz\") != -1 ? \" 12oz \" : \"\";\n          size = itemInOrder.name.indexOf(\"5lb\") != -1 ? \" 5lb \" : size;\n          var grind = itemInOrder.name.split(\"Grind:\")[1].trim();\n\n          var labelFileName = name + size + grind;\n\n\n          //\tconst PATH_TO_LABELS = \"C:\\\\\"\n          var printerName =\n            size === \" 12oz \" ? \"RETAIL PRINTER\" : \"BULK PRINTER\";\n          var driverName = size === \" 12oz \" ? \"RETAIL DRIVEr\" : \"BULK DRIVER\";\n          var port = size === \" 12oz \" ? \"RETAIL PORT\" : \"BULK PORT\";\n\n          for (var i = 0; i < itemInOrder.quantity; i++) {\n            var print = spawn(\n              `AcroRd32.exe`,\n              [\"/h\", \"/t\", labelFileName, printerName, driverName, port],\n              {\n                cwd: `C:\\\\Program Files (x86)\\\\Adobe\\\\Acrobat Reader DC\\\\Reader`\n              }\n            );\n\n            print.stdout.on(\"data\", data => {\n              console.log(`stdout: ${data}`);\n            });\n\n            print.stderr.on(\"data\", data => {\n              console.error(`stderr: ${data}`);\n              this.addTag(order.orderId, ERROR_PRINTING_TAG_ID);\n            });\n\n            print.on(\"close\", code => {\n              console.log(`child process exited with code ${code}`);\n            });\n          }\n        }\n\n        //addTag(order.orderId, LABELS_PRINTED_TAG_ID);\n      }\n    }, */\n    addTag: function(orderId, labelId) {\n      options.path = \"/orders/addtag\";\n      options.method = \"POST\";\n      const postData = {\n        orderId: orderId,\n        tagId: labelId\n      };\n\n      const req = http.request(options, res => {\n        console.debug(`STATUS: ${res.statusCode}`);\n        console.debug(`HEADERS: ${JSON.stringify(res.headers)}`);\n        res.setEncoding(\"utf8\");\n        res.on(\"data\", chunk => {\n          console.debug(`BODY: ${chunk}`);\n        });\n        res.on(\"end\", () => {\n          console.debug(\"No more data in response.\");\n        });\n      });\n\n      req.on(\"error\", e => {\n        console.error(`problem with request: ${e.message}`);\n        this.addTag(orderId, ERROR_PRINTING_TAG_ID);\n      });\n\n      req.write(JSON.stringify(postData));\n      req.end();\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: block;\n  float: left;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components"}]}