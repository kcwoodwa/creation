{"remainingRequest":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kyle\\creation\\src\\components\\Order.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kyle\\creation\\src\\components\\Order.vue","mtime":1580429936922},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgTGFiZWwgZnJvbSAiQC9jb21wb25lbnRzL0xhYmVsLnZ1ZSI7DQovL2ltcG9ydCBjcnlwdG8gZnJvbSAiY3J5cHRvIjsNCmltcG9ydCBodHRwIGZyb20gImh0dHAiOw0KaW1wb3J0IGpzc2NvbXByZXNzIGZyb20gImpzLXN0cmluZy1jb21wcmVzc2lvbiINCg0KLyogY29uc29sZS5sb2coY3J5cHRvLmdldENpcGhlcnMoKSkNCg0KZnVuY3Rpb24gZW5jcnlwdCh0ZXh0LCBwYXNzd29yZCkgew0KICB2YXIgY2lwaGVyID0gY3J5cHRvLmNyZWF0ZUNpcGhlcigicmMyLWNiYyIsIHBhc3N3b3JkKTsNCiAgdmFyIGNyeXB0ZWQgPSBjaXBoZXIudXBkYXRlKHRleHQsICJ1dGY4IiwgImhleCIpOw0KICBjcnlwdGVkICs9IGNpcGhlci5maW5hbCgiaGV4Iik7DQogIHJldHVybiBjcnlwdGVkOw0KfQ0KDQpmdW5jdGlvbiBkZWNyeXB0KHRleHQsIHBhc3N3b3JkKSB7DQogIHZhciBkZWNpcGhlciA9IGNyeXB0by5jcmVhdGVEZWNpcGhlcigicmMyLWNiYyIsIHBhc3N3b3JkKTsNCiAgdmFyIGRlYyA9IGRlY2lwaGVyLnVwZGF0ZSh0ZXh0LCAiaGV4IiwgInV0ZjgiKTsNCiAgZGVjICs9IGRlY2lwaGVyLmZpbmFsKCJ1dGY4Iik7DQogIHJldHVybiBkZWM7DQp9DQogKi8NCi8qIGZ1bmN0aW9uIGhhc2hUZXh0KHRleHQpIHsNCiAgdmFyIGhhc2ggPSBjcnlwdG8NCiAgICAuY3JlYXRlSGFzaCgibWQ1IikNCiAgICAudXBkYXRlKHRleHQpDQogICAgLmRpZ2VzdCgiaGV4Iik7DQogIC8vY29uc29sZS5sb2coaGFzaCk7DQogIHJldHVybiBoYXNoOw0KfQ0KICovDQoNCnZhciBobSA9IG5ldyBqc3Njb21wcmVzcy5IYXVmZm1hbigpOw0KdmFyIHNlY3JldCA9DQogICJabU00TlRSak5tWm1OVFUxTkRnMFpqZzNNbUUzTmpBNU5ERTRaVEV5WVRVNk56VmtNVEkxWldKak5qUm1ORFF6WkdFME5tTTJOREJsTldZek1HVTRZalU9IjsNCg0KY29uc3Qgb3B0aW9ucyA9IHsNCiAgaG9zdG5hbWU6ICJzc2FwaS5zaGlwc3RhdGlvbi5jb20iLA0KICBoZWFkZXJzOiB7DQogICAgQXV0aG9yaXphdGlvbjogIkJhc2ljICIgKyBzZWNyZXQsDQogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIg0KICB9DQp9Ow0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJPcmRlciIsDQogIHByb3BzOiB7DQogICAgbXNnOiBTdHJpbmcsDQogICAgbmFtZTogU3RyaW5nLA0KICAgIGl0ZW1zOiBBcnJheSwNCiAgICBvcmRlck51bWJlcjogU3RyaW5nLA0KICAgIG9yZGVyT2JqZWN0OiBPYmplY3QsDQogICAgY29tcGFueTogU3RyaW5nDQogIH0sDQogIGNvbXBvbmVudHM6IHsNCiAgICBMYWJlbA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtZDVzdW06ICIiLA0KICAgICAgaGlkZGVuOiBmYWxzZSwNCiAgICAgIHByaW50ZWRMYWJlbHM6ICIiDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGdldFByaW50ZWRMYWJlbHNGcm9tU2hpcHN0YXRpb246IGZ1bmN0aW9uKCkgew0KICAgICAgDQogICAgICB0aGlzLnByaW50ZWRMYWJlbHMgPSB0aGlzLnZlcmlmeVRoZW5EZWNyeXB0KA0KICAgICAgICB0aGlzLm9yZGVyT2JqZWN0LmFkdmFuY2VkT3B0aW9ucy5jdXN0b21GaWVsZDENCiAgICAgICk7DQogICAgICBjb25zb2xlLmxvZyh0aGlzLnByaW50ZWRMYWJlbHMpOw0KICAgICAgcmV0dXJuIHRoaXMucHJpbnRlZExhYmVsczsNCiAgICB9LA0KDQogICAgaGlkZTogZnVuY3Rpb24oKSB7DQogICAgICB0aGlzLmhpZGRlbiA9IHRydWU7DQogICAgfSwNCiAgICBlbmNyeXB0VGhlbkF1dGhlbnRpY2F0ZTogZnVuY3Rpb24ocGxhaW5UZXh0KSB7DQoNCiAgICAgIA0KICAgICAgdmFyIGNvbXByZXNzZWQgPSBobS5jb21wcmVzcyhwbGFpblRleHQpDQoNCiAgICAgLyogIHZhciBlbmNyeXB0ZWRUZXh0ID0gZW5jcnlwdChwbGFpblRleHQsICJreWxlIik7DQogICAgICAvL3ZhciBoYXNoID0gaGFzaFRleHQoZW5jcnlwdGVkVGV4dCk7DQogICAgICByZXR1cm4gZW5jcnlwdGVkVGV4dCA7ICovDQogICAgICByZXR1cm4gY29tcHJlc3NlZDsNCiAgICB9LA0KICAgIHZlcmlmeVRoZW5EZWNyeXB0OiBmdW5jdGlvbihlbmNyeXB0ZWRBbmRBdXRoZW50aWNhdGVkVGV4dCkgew0KICAgICAgaWYgKA0KICAgICAgICBlbmNyeXB0ZWRBbmRBdXRoZW50aWNhdGVkVGV4dCA9PT0gdW5kZWZpbmVkIHx8DQogICAgICAgIGVuY3J5cHRlZEFuZEF1dGhlbnRpY2F0ZWRUZXh0ID09PSBudWxsDQogICAgICApDQogICAgICAgIHJldHVybiAiIjsNCiAvKiAgICAgIHZhciBlbmNyeXB0ZWRBbmRIYXNoQXJyYXkgPSBlbmNyeXB0ZWRBbmRBdXRoZW50aWNhdGVkVGV4dC5zcGxpdCgiJCIpOw0KICAgICAgdmFyIGVuY3J5cHRlZCA9IGVuY3J5cHRlZEFuZEhhc2hBcnJheVswXTsgKi8NCg0KICAgICByZXR1cm4gIGhtLmRlY29tcHJlc3MoZW5jcnlwdGVkQW5kQXV0aGVudGljYXRlZFRleHQpDQoNCiAgICAgIC8vcmV0dXJuIGRlY3J5cHQoZW5jcnlwdGVkLCAia3lsZSIpOw0KICAgICAgDQogICAgfSwNCiAgICB1cGRhdGVQcmludGVkTGFiZWxzOiBmdW5jdGlvbihwcmludGVkTGFiZWxzKSB7DQogICAgICBvcHRpb25zLnBhdGggPSAiL29yZGVycy9jcmVhdGVvcmRlciI7DQogICAgICBvcHRpb25zLm1ldGhvZCA9ICJQT1NUIjsNCiAgICAgIGNvbnN0IHJlcSA9IGh0dHAucmVxdWVzdChvcHRpb25zLCByZXMgPT4gew0KICAgICAgICBjb25zb2xlLmRlYnVnKGBTVEFUVVM6ICR7cmVzLnN0YXR1c0NvZGV9YCk7DQogICAgICAgIGNvbnNvbGUuZGVidWcoYEhFQURFUlM6ICR7SlNPTi5zdHJpbmdpZnkocmVzLmhlYWRlcnMpfWApOw0KICAgICAgICByZXMuc2V0RW5jb2RpbmcoInV0ZjgiKTsNCiAgICAgICAgcmVzLm9uKCJkYXRhIiwgY2h1bmsgPT4gew0KICAgICAgICAgIGNvbnNvbGUuZGVidWcoYEJPRFk6ICR7Y2h1bmt9YCk7DQogICAgICAgIH0pOw0KICAgICAgICByZXMub24oImVuZCIsICgpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmRlYnVnKCJObyBtb3JlIGRhdGEgaW4gcmVzcG9uc2UuIik7DQoNCiAgICAgICAgICAvKiAgIGNvbnNvbGUubG9nKHNlbGYuJGNoaWxkcmVuLmZpbHRlciggZnVuY3Rpb24oY2hpbGQpeyByZXR1cm4gY2hpbGQuJGVsLm5vZGVOYW1lID09ICJESVYiIH0pKQ0KICAgICAgICAgIGlmKHNlbGYuJGNoaWxkcmVuLmZpbHRlciggZnVuY3Rpb24oY2hpbGQpeyByZXR1cm4gY2hpbGQuJGVsLm5vZGVOYW1lID09ICJESVYiIH0pLmxlbmd0aCA9PT0gMSl7DQogICAgICAgICAgICB0aGlzLmhpZGRlbiA9IHRydWU7DQogICAgICAgICAgICANCiAgICAgICAgICB9ICovDQogICAgICAgIH0pOw0KICAgICAgfSk7DQoNCiAgICAgIHJlcS5vbigiZXJyb3IiLCBlID0+IHsNCiAgICAgICAgY29uc29sZS5lcnJvcihgcHJvYmxlbSB3aXRoIHJlcXVlc3Q6ICR7ZS5tZXNzYWdlfWApOw0KICAgICAgfSk7DQogICAgICAvKiB2YXIgY3VzdG9tRmllbGQxID0gdGhpcy5wcmludGVkTGFiZWxzOw0KICAgICAgdmFyIGN1cnJlbnQgPSBjdXN0b21GaWVsZDEgPT09IG51bGwgPyAnJyA6IHRoaXMucHJpbnRlZExhYmVscw0KICAgICAgY3VycmVudCs9IHByaW50ZWRMYWJlbHM7DQogICAgICAgKi8NCiAgICAgIHZhciBjdXJyZW50ID0gdGhpcy5wcmludGVkTGFiZWxzID8gdGhpcy5wcmludGVkTGFiZWxzIDogIiI7DQogICAgICBjb25zb2xlLmxvZyhwcmludGVkTGFiZWxzICsgY3VycmVudCk7DQogICAgICBjdXJyZW50ID0gdGhpcy5lbmNyeXB0VGhlbkF1dGhlbnRpY2F0ZShwcmludGVkTGFiZWxzICsgY3VycmVudCk7DQogICAgICBjb25zb2xlLmxvZyhjdXJyZW50KTsNCiAgICAgIHRoaXMub3JkZXJPYmplY3QuYWR2YW5jZWRPcHRpb25zLmN1c3RvbUZpZWxkMSA9IGN1cnJlbnQ7DQoNCiAgICAgIHJlcS53cml0ZShKU09OLnN0cmluZ2lmeSh0aGlzLm9yZGVyT2JqZWN0KSk7DQogICAgICByZXEuZW5kKCk7DQogICAgfSwNCiAgICANCiAgfQ0KfTsNCg=="},{"version":3,"sources":["Order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"Order.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div v-show=\"!this.hidden\" class=\"wrapper\">\r\n    <div class=\"header\">\r\n      <div id=\"spacer\"></div>\r\n      <b>{{name + ((company && company!== null) ? ' - ' +company : '') + ' - #'+ orderNumber }}</b>\r\n    </div>\r\n    <Label\r\n      v-bind:key=\"name.toString()+item.name\"\r\n      v-for=\"(item, index) in items\"\r\n      :name=\"item.name\"\r\n      :orderNumber=\"name.toString()\"\r\n      :itemObject=\"item\"\r\n      :quantity=\"item.quantity\"\r\n      @hideOrder=\"hide\"\r\n      @updatePrintedLabels=\"updatePrintedLabels\"\r\n      :last=\"index === items.length-1\"\r\n      :printedLabels=\"getPrintedLabelsFromShipstation()\"\r\n    ></Label>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Label from \"@/components/Label.vue\";\r\n//import crypto from \"crypto\";\r\nimport http from \"http\";\r\nimport jsscompress from \"js-string-compression\"\r\n\r\n/* console.log(crypto.getCiphers())\r\n\r\nfunction encrypt(text, password) {\r\n  var cipher = crypto.createCipher(\"rc2-cbc\", password);\r\n  var crypted = cipher.update(text, \"utf8\", \"hex\");\r\n  crypted += cipher.final(\"hex\");\r\n  return crypted;\r\n}\r\n\r\nfunction decrypt(text, password) {\r\n  var decipher = crypto.createDecipher(\"rc2-cbc\", password);\r\n  var dec = decipher.update(text, \"hex\", \"utf8\");\r\n  dec += decipher.final(\"utf8\");\r\n  return dec;\r\n}\r\n */\r\n/* function hashText(text) {\r\n  var hash = crypto\r\n    .createHash(\"md5\")\r\n    .update(text)\r\n    .digest(\"hex\");\r\n  //console.log(hash);\r\n  return hash;\r\n}\r\n */\r\n\r\nvar hm = new jsscompress.Hauffman();\r\nvar secret =\r\n  \"ZmM4NTRjNmZmNTU1NDg0Zjg3MmE3NjA5NDE4ZTEyYTU6NzVkMTI1ZWJjNjRmNDQzZGE0NmM2NDBlNWYzMGU4YjU=\";\r\n\r\nconst options = {\r\n  hostname: \"ssapi.shipstation.com\",\r\n  headers: {\r\n    Authorization: \"Basic \" + secret,\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: \"Order\",\r\n  props: {\r\n    msg: String,\r\n    name: String,\r\n    items: Array,\r\n    orderNumber: String,\r\n    orderObject: Object,\r\n    company: String\r\n  },\r\n  components: {\r\n    Label\r\n  },\r\n  data() {\r\n    return {\r\n      md5sum: \"\",\r\n      hidden: false,\r\n      printedLabels: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    getPrintedLabelsFromShipstation: function() {\r\n      \r\n      this.printedLabels = this.verifyThenDecrypt(\r\n        this.orderObject.advancedOptions.customField1\r\n      );\r\n      console.log(this.printedLabels);\r\n      return this.printedLabels;\r\n    },\r\n\r\n    hide: function() {\r\n      this.hidden = true;\r\n    },\r\n    encryptThenAuthenticate: function(plainText) {\r\n\r\n      \r\n      var compressed = hm.compress(plainText)\r\n\r\n     /*  var encryptedText = encrypt(plainText, \"kyle\");\r\n      //var hash = hashText(encryptedText);\r\n      return encryptedText ; */\r\n      return compressed;\r\n    },\r\n    verifyThenDecrypt: function(encryptedAndAuthenticatedText) {\r\n      if (\r\n        encryptedAndAuthenticatedText === undefined ||\r\n        encryptedAndAuthenticatedText === null\r\n      )\r\n        return \"\";\r\n /*      var encryptedAndHashArray = encryptedAndAuthenticatedText.split(\"$\");\r\n      var encrypted = encryptedAndHashArray[0]; */\r\n\r\n     return  hm.decompress(encryptedAndAuthenticatedText)\r\n\r\n      //return decrypt(encrypted, \"kyle\");\r\n      \r\n    },\r\n    updatePrintedLabels: function(printedLabels) {\r\n      options.path = \"/orders/createorder\";\r\n      options.method = \"POST\";\r\n      const req = http.request(options, res => {\r\n        console.debug(`STATUS: ${res.statusCode}`);\r\n        console.debug(`HEADERS: ${JSON.stringify(res.headers)}`);\r\n        res.setEncoding(\"utf8\");\r\n        res.on(\"data\", chunk => {\r\n          console.debug(`BODY: ${chunk}`);\r\n        });\r\n        res.on(\"end\", () => {\r\n          console.debug(\"No more data in response.\");\r\n\r\n          /*   console.log(self.$children.filter( function(child){ return child.$el.nodeName == \"DIV\" }))\r\n          if(self.$children.filter( function(child){ return child.$el.nodeName == \"DIV\" }).length === 1){\r\n            this.hidden = true;\r\n            \r\n          } */\r\n        });\r\n      });\r\n\r\n      req.on(\"error\", e => {\r\n        console.error(`problem with request: ${e.message}`);\r\n      });\r\n      /* var customField1 = this.printedLabels;\r\n      var current = customField1 === null ? '' : this.printedLabels\r\n      current+= printedLabels;\r\n       */\r\n      var current = this.printedLabels ? this.printedLabels : \"\";\r\n      console.log(printedLabels + current);\r\n      current = this.encryptThenAuthenticate(printedLabels + current);\r\n      console.log(current);\r\n      this.orderObject.advancedOptions.customField1 = current;\r\n\r\n      req.write(JSON.stringify(this.orderObject));\r\n      req.end();\r\n    },\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  text-transform: uppercase;\r\n\r\n  width: 95%;\r\n  padding: 6px 10px;\r\n\r\n  margin: 4px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  text-transform: uppercase;\r\n  padding: 2px;\r\n}\r\n\r\n#spacer {\r\n  width: 5px;\r\n}\r\n</style>"]}]}