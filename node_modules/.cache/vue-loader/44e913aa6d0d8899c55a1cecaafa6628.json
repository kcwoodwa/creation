{"remainingRequest":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kyle\\creation\\src\\components\\Label.vue?vue&type=style&index=0&id=6ae65e18&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Kyle\\creation\\src\\components\\Label.vue","mtime":1580428161847},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sYWJlbCB7DQogIHdpZHRoOiAxMDAlOw0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICBwYWRkaW5nOiA0cHg7DQogIG1hcmdpbjogMnB4Ow0KICBib3JkZXI6IDFweCBpbnNldCBibGFjazsNCn0NCg=="},{"version":3,"sources":["Label.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Label.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"label\" v-show=\"!hidden && !alreadyPrinted\" v-on:click=\"print()\">\r\n    {{quantity +\" × \"}}\r\n    {{computedName }}\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n//const LABELS_PRINTED_TAG_ID = 89655;\r\nconst ERROR_PRINTING_TAG_ID = 91038;\r\nimport { spawn } from \"child_process\";\r\nexport default {\r\n  created() {\r\n    this.hidden = true;\r\n\r\n    this.labelFileName;\r\n    if (this.name.includes(\"Grind:\")) {\r\n      this.hidden = false;\r\n\r\n      //Ethiopia Yirgacheffe Size: 12oz, Grind: Whole\r\n      this.coffee = this.name.split(\"Size\")[0].trim();\r\n      this.size = this.name.indexOf(\"12oz\") != -1 ? \" 12oz \" : \"\";\r\n      this.size = this.name.indexOf(\"5lb\") != -1 ? \" 5lb \" : this.size;\r\n      this.grind = this.name.split(\"Grind:\")[1].trim();\r\n    } else if (\r\n      this.name.includes(\"Ground\") ||\r\n      this.name.includes(\"Whole Bean\")\r\n    ) {\r\n      this.hidden = false;\r\n\r\n      //Ethiopia Yirgacheffe Size: 12oz, Grind: Whole\r\n      this.coffee = this.name.split(\"-\")[0].trim();\r\n      this.size = this.name.includes(\"5 lb\") ? \"5lb\" : \"12oz\";\r\n      this.grind = this.name.includes(\"Ground\") ? \"Ground\" : \"Whole\";\r\n    } else if (this.name.includes(\"Subscription\")) {\r\n      this.hidden = false;\r\n      \r\n\r\n      this.grind = this.itemObject.options[0].value.includes(\"Yes\")\r\n        ? \"Ground\"\r\n        : \"Whole\";\r\n      this.grindType =\r\n        this.grind === \"Ground\"\r\n          ? this.itemObject.options[0].value.split(\"–\")[1]\r\n          : \"\";\r\n      this.coffee = this.itemObject.options[1].value;\r\n      this.size = \"12oz\";\r\n\r\n      this.computedName =\r\n        \"Subscription: \" +\r\n        this.coffee +\r\n        \" - \" +\r\n        this.grind +\r\n        (this.grindType === \"\" ? \"\" : \" - \" + this.grindType);\r\n\r\n      //Ethiopia Yirgacheffe Size: 12oz, Grind: Whole\r\n      this.coffee = this.name.split(\"-\")[0].trim();\r\n      this.size = this.name.includes(\"5 lb\") ? \"5lb\" : \"12oz\";\r\n      this.grind = this.name.includes(\"Ground\") ? \"Ground\" : \"Whole\";\r\n    }\r\n    if (this.hidden === false) {\r\n      this.labelFileName = this.coffee + this.size + this.grind;\r\n\r\n       var regex =  (this.quantity + this.labelFileName).match( /[\\dA-Z]/g).join('');\r\n      if (\r\n        this.printedLabels &&\r\n        this.printedLabels.includes(regex)\r\n      )\r\n        this.alreadyPrinted = true;\r\n       \r\n        \r\n        console.debug(regex)\r\n        this.$emit(\"addToQuantity\",  regex );\r\n       \r\n        \r\n    }\r\n\r\n   // if (this.last) this.$emit(\"calculateChecksum\");\r\n   \r\n    if(this.last && \r\n        this.$parent.$children.length === \r\n        this.$parent.$children.filter( function(child){return (child.alreadyPrinted || child.hidden)}).length){\r\n          this.$emit('hideOrder')\r\n        }\r\n  },\r\n  name: \"Label\",\r\n  props: {\r\n    msg: String,\r\n    name: String,\r\n    itemObject: Object,\r\n    orderNumber: String,\r\n    quantity: Number,\r\n    last: Boolean,\r\n    printedLabels: String\r\n  },\r\n  data: function() {\r\n    return {\r\n      hidden: true,\r\n      alreadyPrinted: false,\r\n      computedName: this.name,\r\n      labelFileName: \"\",\r\n      size: \"\",\r\n      grind: \"\",\r\n      grindType: \"\",\r\n      coffee: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    print: function() {\r\n      /* var printerName =\r\n        this.size === \" 12oz \" ? \"RETAIL PRINTER\" : \"BULK PRINTER\";\r\n      var driverName = this.size === \" 12oz \" ? \"RETAIL DRIVEr\" : \"BULK DRIVER\";\r\n      var port = this.size === \" 12oz \" ? \"RETAIL PORT\" : \"BULK PORT\";\r\n\r\n      for (var i = 0; i < this.quantity; i++) {\r\n        var print = spawn(\r\n          `AcroRd32.exe`,\r\n          [\"/h\", \"/t\", \"test.pdf\", printerName, driverName, port],\r\n          {\r\n            cwd: `C:\\\\Program Files (x86)\\\\Adobe\\\\Acrobat Reader DC\\\\Reader`\r\n          }\r\n        );\r\n\r\n        print.stdout.on(\"data\", data => {\r\n          console.log(`stdout: ${data}`);\r\n        });\r\n\r\n        print.stderr.on(\"data\", data => {\r\n          console.error(`stderr: ${data}`);\r\n          this.addTag(this.orderNumber, ERROR_PRINTING_TAG_ID);\r\n        });\r\n\r\n        print.on(\"close\", code => {\r\n          console.log(`child process exited with code ${code}`);\r\n        });\r\n      } */\r\n      var regex =  (this.quantity + this.labelFileName).match( /[\\dA-Z]/g).join('');\r\n      this.$emit(\"updatePrintedLabels\", regex);\r\n\r\n      //addTag(order.orderNumber, LABELS_PRINTED_TAG_ID);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.label {\r\n  width: 100%;\r\n  text-align: left;\r\n  padding: 4px;\r\n  margin: 2px;\r\n  border: 1px inset black;\r\n}\r\n</style>"]}]}