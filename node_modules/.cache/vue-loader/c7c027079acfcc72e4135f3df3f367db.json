{"remainingRequest":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kyle\\creation\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kyle\\creation\\src\\App.vue","mtime":1580097274325},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kyle\\creation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnOwppbXBvcnQgZnMgZnJvbSAnZnMnOwppbXBvcnQgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7CmltcG9ydCBmb250a2l0IGZyb20gJ0BwZGYtbGliL2ZvbnRraXQnOwppbXBvcnQge1BERkRvY3VtZW50LCByZ2J9IGZyb20gInBkZi1saWIiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcHAnCn07CmNvbnN0IHsgcmVtb3RlIH0gPSByZXF1aXJlKCJlbGVjdHJvbiIpOwpjb25zdCB7IFRyYXksIE1lbnUgfSA9IHJlbW90ZTsKCgoKYXN5bmMgZnVuY3Rpb24gZW1iZWRGb250QW5kTWVhc3VyZVRleHQoKSB7CgogIAogIGNvbnN0IHVybCA9CiAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21hcHplbi9vcGVuL21hc3Rlci9hc3NldHMvZm9udHMvR290aGFtLUxpZ2h0LnR0ZiI7CiAgY29uc3QgZm9udEJ5dGVzID0gYXdhaXQgZmV0Y2godXJsKS50aGVuKHJlcyA9PiByZXMuYXJyYXlCdWZmZXIoKSk7CgogIGNvbnN0IGV4aXN0aW5nUGRmQnl0ZXMgPSBmcy5yZWFkRmlsZVN5bmMoCiAgICAiQzpcXFVzZXJzXFxLeWxlXFxTcGFjZVNuaWZmZXIgVXNlciBNYW51YWwucGRmIgogICk7CgogIC8vIExvYWQgYSBQREZEb2N1bWVudCBmcm9tIHRoZSBleGlzdGluZyBQREYgYnl0ZXMKCiAgY29uc3QgcGRmRG9jID0gYXdhaXQgUERGRG9jdW1lbnQubG9hZChleGlzdGluZ1BkZkJ5dGVzKTsKCiAgcGRmRG9jLnJlZ2lzdGVyRm9udGtpdChmb250a2l0KTsKICBjb25zdCBjdXN0b21Gb250ID0gYXdhaXQgcGRmRG9jLmVtYmVkRm9udChmb250Qnl0ZXMpOwoKICBjb25zdCBwYWdlID0gcGRmRG9jLmFkZFBhZ2UoKTsKCiAgY29uc3QgdGV4dCA9ICJUaGlzIGlzIHRleHQgaW4gYW4gZW1iZWRkZWQgZm9udCEiOwogIGNvbnN0IHRleHRTaXplID0gMzU7CgogIHBhZ2UuZHJhd1RleHQodGV4dCwgewogICAgeDogNDAsCiAgICB5OiA0NTAsCiAgICBzaXplOiB0ZXh0U2l6ZSwKICAgIGZvbnQ6IGN1c3RvbUZvbnQsCiAgICBjb2xvcjogcmdiKDAsIDAuNTMsIDAuNzEpCiAgfSk7CgoKICBjb25zdCBwZGZCeXRlcyA9IGF3YWl0IHBkZkRvYy5zYXZlKCk7CiAgZnMud3JpdGVGaWxlKCJ0ZXN0LnBkZiIsIHBkZkJ5dGVzLCAoKSA9PiB7fSk7Cn0KCmVtYmVkRm9udEFuZE1lYXN1cmVUZXh0KCk7CgoKbGV0IHRyYXlJY29uID0gbmV3IFRyYXkoCiAgcGF0aC5qb2luKAogICAgIkM6XFxVc2Vyc1xcS3lsZVxcRG9jdW1lbnRzXFxNeSBHYW1lc1xcUGF0aCBvZiBFeGlsZVxcRGFpbHlEZWFsQ2FjaGUiLAogICAgIkRhaWx5RGVhbENyaW1zb25XZWFwb24ucG5nIgogICkKKTsKCmNvbnN0IHRyYXlNZW51VGVtcGxhdGUgPSBbCiAgewogICAgbGFiZWw6ICJFbXB0eSBBcHBsaWNhdGlvbiIsCiAgICBlbmFibGVkOiBmYWxzZQogIH0sCgogIHsKICAgIGxhYmVsOiAiU2V0dGluZ3MiLAogICAgY2xpY2s6IGZ1bmN0aW9uKCkgewogICAgICBjb25zb2xlLmxvZygiQ2xpY2tlZCBvbiBzZXR0aW5ncyIpOwogICAgfQogIH0sCgogIHsKICAgIGxhYmVsOiAiSGVscCIsCiAgICBjbGljazogZnVuY3Rpb24oKSB7CiAgICAgIGNvbnNvbGUubG9nKCJDbGlja2VkIG9uIEhlbHAiKTsKICAgIH0KICB9Cl07CgpsZXQgdHJheU1lbnUgPSBNZW51LmJ1aWxkRnJvbVRlbXBsYXRlKHRyYXlNZW51VGVtcGxhdGUpOwp0cmF5SWNvbi5zZXRDb250ZXh0TWVudSh0cmF5TWVudSk7CgoKCgoKLy8gRm9yIGV4YW1wbGUsIGBwZGZCeXRlc2AgY2FuIGJlOgovLyAgIOKAoiBXcml0dGVuIHRvIGEgZmlsZSBpbiBOb2RlCi8vICAg4oCiIERvd25sb2FkZWQgZnJvbSB0aGUgYnJvd3NlcgovLyAgIOKAoiBSZW5kZXJlZCBpbiBhbiA8aWZyYW1lPgo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;AAMA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<style>\n@font-face {\n  font-family: gothamLight;\n  src: url('https://raw.githubusercontent.com/mapzen/open/master/assets/fonts/Gotham-Book.ttf');\n}\n\n\n\n#app {\n  font-family: gothamLight, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  overflow-x: hidden;\n  \n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n\n<script>\nimport path from 'path';\nimport fs from 'fs';\nimport fetch from 'node-fetch';\nimport fontkit from '@pdf-lib/fontkit';\nimport {PDFDocument, rgb} from \"pdf-lib\";\n\nexport default {\n  name: 'App'\n};\nconst { remote } = require(\"electron\");\nconst { Tray, Menu } = remote;\n\n\n\nasync function embedFontAndMeasureText() {\n\n  \n  const url =\n    \"https://raw.githubusercontent.com/mapzen/open/master/assets/fonts/Gotham-Light.ttf\";\n  const fontBytes = await fetch(url).then(res => res.arrayBuffer());\n\n  const existingPdfBytes = fs.readFileSync(\n    \"C:\\\\Users\\\\Kyle\\\\SpaceSniffer User Manual.pdf\"\n  );\n\n  // Load a PDFDocument from the existing PDF bytes\n\n  const pdfDoc = await PDFDocument.load(existingPdfBytes);\n\n  pdfDoc.registerFontkit(fontkit);\n  const customFont = await pdfDoc.embedFont(fontBytes);\n\n  const page = pdfDoc.addPage();\n\n  const text = \"This is text in an embedded font!\";\n  const textSize = 35;\n\n  page.drawText(text, {\n    x: 40,\n    y: 450,\n    size: textSize,\n    font: customFont,\n    color: rgb(0, 0.53, 0.71)\n  });\n\n\n  const pdfBytes = await pdfDoc.save();\n  fs.writeFile(\"test.pdf\", pdfBytes, () => {});\n}\n\nembedFontAndMeasureText();\n\n\nlet trayIcon = new Tray(\n  path.join(\n    \"C:\\\\Users\\\\Kyle\\\\Documents\\\\My Games\\\\Path of Exile\\\\DailyDealCache\",\n    \"DailyDealCrimsonWeapon.png\"\n  )\n);\n\nconst trayMenuTemplate = [\n  {\n    label: \"Empty Application\",\n    enabled: false\n  },\n\n  {\n    label: \"Settings\",\n    click: function() {\n      console.log(\"Clicked on settings\");\n    }\n  },\n\n  {\n    label: \"Help\",\n    click: function() {\n      console.log(\"Clicked on Help\");\n    }\n  }\n];\n\nlet trayMenu = Menu.buildFromTemplate(trayMenuTemplate);\ntrayIcon.setContextMenu(trayMenu);\n\n\n\n\n\n// For example, `pdfBytes` can be:\n//   • Written to a file in Node\n//   • Downloaded from the browser\n//   • Rendered in an <iframe>\n</script>\n"]}]}